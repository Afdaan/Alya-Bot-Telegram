name: Deploy AlyaBot to Self-Hosted Server (Development)

on:
  push:
    branches:
      - development

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4

      - name: Setup Python environment
        run: |
          if ! command -v python3 &> /dev/null; then
            echo "Python3 not found, installing..."
            sudo apt update && sudo apt install -y python3 python3-pip python3-venv
          fi
          
          if [ ! -d "/opt/dev-Alya-Bot-Telegram/venv" ]; then
            python3 -m venv /opt/dev-Alya-Bot-Telegram/venv
          fi

      - name: Prepare and update codebase
        run: |
          sudo mkdir -p /opt/dev-Alya-Bot-Telegram
          sudo chown $USER:$USER /opt/dev-Alya-Bot-Telegram
          
          cd /opt/dev-Alya-Bot-Telegram
          
          if [ ! -d ".git" ]; then
            git init
            git remote add origin https://github.com/Afdaan/Alya-Bot-Telegram.git
          fi
          
          git stash --include-untracked || true
          git fetch origin
          git checkout development || git checkout -b development origin/development
          git pull origin development

      - name: Install Python dependencies
        run: |
          cd /opt/dev-Alya-Bot-Telegram
          
          source venv/bin/activate
          
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          echo "Dependencies installed successfully"

      - name: Stop existing AlyaBot processes
        run: |
          cd /opt/dev-Alya-Bot-Telegram
          
          pkill -f "python.*main.py" || true
          
          tmux kill-session -t alya-bot-develop 2>/dev/null || true
          
          echo "Previous AlyaBot processes terminated"

      - name: Start AlyaBot in tmux session
        run: |
          cd /opt/dev-Alya-Bot-Telegram
          
          tmux new-session -d -s alya-bot-develop \
            "source venv/bin/activate && python main.py > bot.log 2>&1"
          
          echo "AlyaBot started in tmux session: alya-bot-develop"

      - name: Verify AlyaBot deployment
        run: |
          sleep 10
          
          if tmux has-session -t alya-bot-develop 2>/dev/null; then
            echo "‚úÖ AlyaBot is running successfully in tmux session"
            
            echo "Recent logs:"
            tail -n 20 /opt/dev-Alya-Bot-Telegram/bot.log || echo "No logs yet"
          else
            echo "‚ùå Failed to start AlyaBot in tmux"
            
            if [ -f "/opt/dev-Alya-Bot-Telegram/bot.log" ]; then
              echo "Error logs:"
              cat /opt/dev-Alya-Bot-Telegram/bot.log
            fi
            
            exit 1
          fi

      - name: Notify deployment success via Telegram
        if: success()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_DEPLOY_CHAT_ID }}
          TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_TOPIC_ID }}
        run: |
          cd /opt/dev-Alya-Bot-Telegram
          
          set -a
          if [ -f .env ]; then
            source .env
          fi
          set +a

          GIT_INFO=$(git log -1 --pretty=format:"%s|%h|%an|%ar")
          LAST_COMMIT_MSG=$(echo "$GIT_INFO" | cut -d'|' -f1 | sed 's/&/\&amp;/g;s/</\&lt;/g;s/>/\&gt;/g')
          LAST_COMMIT_HASH=$(echo "$GIT_INFO" | cut -d'|' -f2)
          LAST_COMMIT_AUTHOR=$(echo "$GIT_INFO" | cut -d'|' -f3 | sed 's/&/\&amp;/g;s/</\&lt;/g;s/>/\&gt;/g')
          LAST_COMMIT_TIME=$(echo "$GIT_INFO" | cut -d'|' -f4)
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD | sed 's/&/\&amp;/g;s/</\&lt;/g;s/>/\&gt;/g')

          TELEGRAM_API="https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"
          MSG="üöÄ <b>AlyaBot Deploy Sukses (Development)!</b> üöÄ%0A%0A"
          MSG="${MSG}üì¶ <b>Branch:</b> <code>$BRANCH_NAME</code>%0A"
          MSG="${MSG}üîó <b>Commit:</b> <code>$LAST_COMMIT_HASH</code>%0A"
          MSG="${MSG}üë§ <b>Author:</b> $LAST_COMMIT_AUTHOR%0A"
          MSG="${MSG}‚è∞ <b>Time:</b> $LAST_COMMIT_TIME%0A%0A"
          MSG="${MSG}üìù <b>Changelog:</b>%0A$LAST_COMMIT_MSG%0A%0A"
          MSG="${MSG}‚ú® Bot is now running in tmux session: <code>alya-bot-develop</code>"

          if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then
            if [ -n "$TELEGRAM_TOPIC_ID" ]; then
              curl -s -X POST "$TELEGRAM_API" \
                -d chat_id="$TELEGRAM_CHAT_ID" \
                -d message_thread_id="$TELEGRAM_TOPIC_ID" \
                -d text="$MSG" \
                -d parse_mode="HTML" > /dev/null 2>&1 || true
            else
              curl -s -X POST "$TELEGRAM_API" \
                -d chat_id="$TELEGRAM_CHAT_ID" \
                -d text="$MSG" \
                -d parse_mode="HTML" > /dev/null 2>&1 || true
            fi
            echo "üì± Deployment notification sent to Telegram"
          else
            echo "‚ö†Ô∏è TELEGRAM_BOT_TOKEN or TELEGRAM_CHAT_ID not set, skipping notification"
          fi

      - name: Notify deployment failure via Telegram
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_TOPIC_ID }}
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")
          COMMIT_HASH=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
          
          TELEGRAM_API="https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"
          MSG="‚ùå <b>AlyaBot Deploy GAGAL (Development)!</b> ‚ùå%0A%0A"
          MSG="${MSG}üì¶ <b>Branch:</b> <code>$BRANCH_NAME</code>%0A"
          MSG="${MSG}üîó <b>Commit:</b> <code>$COMMIT_HASH</code>%0A%0A"
          MSG="${MSG}üîç Cek GitHub Actions logs untuk detail error."

          if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then
            if [ -n "$TELEGRAM_TOPIC_ID" ]; then
              curl -s -X POST "$TELEGRAM_API" \
                -d chat_id="$TELEGRAM_CHAT_ID" \
                -d message_thread_id="$TELEGRAM_TOPIC_ID" \
                -d text="$MSG" \
                -d parse_mode="HTML" > /dev/null 2>&1 || true
            else
              curl -s -X POST "$TELEGRAM_API" \
                -d chat_id="$TELEGRAM_CHAT_ID" \
                -d text="$MSG" \
                -d parse_mode="HTML" > /dev/null 2>&1 || true
            fi
            echo "üì± Failure notification sent to Telegram"
          fi