name: Deploy AlyaBot to Self-Hosted Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4

      - name: Pull latest Docker image (if using remote registry)
        run: echo "Skip pull, using local build"

      - name: Change to project directory
        run: cd /opt/Alya-Telegram

      - name: Build Docker image
        run: |
          cd /opt/Alya-Telegram
          export DOCKER_BUILDKIT=1
          docker build -t alya-bot:latest .

      - name: Stop existing AlyaBot container (if running)
        run: |
          docker stop alya-bot || true
          docker rm alya-bot || true

      - name: Start AlyaBot container
        run: |
          cd /opt/Alya-Telegram
          docker run -d \
            --name alya-bot \
            --restart unless-stopped \
            --env-file .env \
            -v $PWD/data:/app/data \
            alya-bot:latest

      - name: Show running containers
        run: docker ps -a

      - name: Notify via Telegram
        if: success()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.DEPLOY_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.DEPLOY_CHAT_ID }}
          TELEGRAM_TOPIC_ID: ${{ secrets.DEPLOY_TOPIC_ID }}
        run: |
          cd /opt/Alya-Telegram

          # Get deployment info
          LAST_COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          LAST_COMMIT_HASH=$(git rev-parse --short HEAD)
          LAST_COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an")
          LAST_COMMIT_TIME=$(git log -1 --pretty=format:"%ar")
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

          # Encode message for HTML
          MSG="✨ AlyaBot Deploy Sukses! ✨%0A%0ABranch: <code>$BRANCH_NAME</code>%0ACommit: <code>$LAST_COMMIT_HASH</code>%0AAuthor: <b>$LAST_COMMIT_AUTHOR</b>%0ATime: $LAST_COMMIT_TIME%0A%0A<b>Changelog:</b>%0A$LAST_COMMIT_MSG"

          # Send notification with or without topic_id as needed
          if [ -n "$TELEGRAM_TOPIC_ID" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d chat_id="$TELEGRAM_CHAT_ID" \
              -d message_thread_id="$TELEGRAM_TOPIC_ID" \
              -d text="$MSG" \
              -d parse_mode="HTML"
          else
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d chat_id="$TELEGRAM_CHAT_ID" \
              -d text="$MSG" \
              -d parse_mode="HTML"
          fi

          echo "✅ Deployment notification sent to Telegram"